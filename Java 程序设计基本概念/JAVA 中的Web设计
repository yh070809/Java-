JAVA 中的Web设计

forward 和 redirect 的区别是什么


forward 是服务器请求资源  服务器直接访问目标地址的URL  把URL的响应内容读取过来 然后把这些内容发给浏览器 浏览器根本不知道服务器发送的内容从哪里来的 所以他的地址栏里的地址还是原来的地址

redirect  就是服务端根据逻辑发送一个状态码 告诉浏览器重新去请求事先访问过的那个地址

一般来说   浏览器会用刚才请求的所有参数重新请求  所以SESSION request 参数都可以获取






JSP  有哪些内置对象 ？ 作用分别是什么？

JSP 公有以下9种基本内置组件 （可与ASP 的6种内部组件相对应）
request  用户端请求 此请求会包含来自GET/POST 请求的参数
response  网页传回用户端的回应
pageContext : 网页的属性是在这里管理的
Session： 与请求有关的会话期
application： Servlet 正在执行的内容
Out： 用来传送回应的输出
Config ： Servlet 的框架结构
Page： JSP 网页本身
Exception ： 针对错误页面 未捕捉的例外



JSP 有哪些动作  ？ 它们的作用分别是什么
 JSP 包含以下6种动作
 jsp：include 在页面被请求的时候引入一个文件
 jsp：useBean 寻找或者实例化一个Bean
 jsp:setProperty 设置JavaBean 的属性
 jsp：getProperty 输出JavaBean 的属性
 jsp: forward: 把请求转到另外一个页面
 jsp: plugin : 根据浏览器类型为Java 插件生成OBJECT 或者EMBED 标记
 

JSP 中动态INCLUDE 和静态 INCLUDE 的区别有哪些呢？
动态 INCLUDE 用jsp：include 动作实现   如下面这行代码 它总是会检查所含文件中的变化 
适合用于包含动态页面 并且可以带参数

<jsp : include page="include.jsp" flush="true">

静态INCLUDE 用include 伪代码实现 如下面这行代码不会检查所含文件的变化 适用于包含静态页面 
<%@ include file ="include.htm"%>


两种跳转方式分别是什么 ？ 有什么区别？ 
两种跳转方式分别如下： 
<jsp: include page = "include.jsp" flush ="true">
<jsp: forward page = "nextpage.jsp" >

前者页面不会转向include 所指的页面  只是显示该页的结果  主页面 还是原来的页面   执行完以后还会回来 相当于函数调用 并且可以带参数  后者完全转向新页面 不会再回来

相当于GOTO语句






下面不属于JSP 内置对象的是 （） ？
A. Config  B. page  C. cookie D. exception 
JSP 共有 以下9种基本内置组件
1.request： 用户端请求 此请求会包含来自GET/POST请求的参数

2. response ： 网页传回用户端的回应
3.pageContext：  网页的属性是在这里管理的
4. session： 与请求有关的会话期
5. application servlet ： 正在执行的内容
6. out ：用来传送回应的输出
7. config : servlet  的构架部件
8.page ： JSP网页本身
9.exceptio： 针对网页错误， 未捕捉的例外