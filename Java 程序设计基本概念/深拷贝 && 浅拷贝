浅拷贝
浅拷贝其实我之前有文章具体讲过，不过没有提及这个名词罢了，例如：js内存空间及this关键词详解，这篇文章，里面讲到如下：

var m = { a: 10, b: 20 }
var n = m;
n.a = 15;
// 这时m.a的值是多少
m.a会输出15，因为这是浅拷贝，n和m指向的是同一个堆，对象复制只是复制的对象的引用。

深拷贝
深拷贝和上面浅拷贝不同，就是彻底copy一个对象，而不是copy对象的引用，例如，还是之前的例子，我们这么写：

var m = { a: 10, b: 20 }
var n = {a:m.a,b:m.b};
n.a = 15;
这次，我们再来输出m.a ，发现m.a的值还是10,并没有改变，m对象和n对象是虽然所有的值都是一样的，但是在堆里面，对应的不是同一个了，这个就是深拷贝。

深拷贝和浅拷贝

浅拷贝只复制指向某个对象的指针，而不复制对象本身，新旧对象还是共享同一块内存。但深拷贝会另外创造一个一模一样的对象，新对象跟原对象不共享内存，修改新对象不会改到原对象。

https://www.haorooms.com/post/js_copy_sq